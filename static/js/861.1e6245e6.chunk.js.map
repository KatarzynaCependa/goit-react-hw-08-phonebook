{"version":3,"file":"static/js/861.1e6245e6.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/pages/Phonebook/Phonebook.module.css?1c37","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","redux/contacts/selectors.js","pages/Phonebook/Phonebook.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Phonebook_wrapper__jqMf7\",\"header\":\"Phonebook_header__QAOR+\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"contactFormLabel\":\"ContactForm_contactFormLabel__16ABo\",\"button\":\"ContactForm_button__eSwX9\",\"inputEl\":\"ContactForm_inputEl__kLkA4\"};","import { useDispatch, useSelector } from 'react-redux';\nimport css from 'components/ContactForm/ContactForm.module.css';\nimport { addContact } from 'redux/contacts/operations';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    const contact = {\n      name,\n      number,\n    };\n\n    const contactExists = contacts.some(\n      existingContact =>\n        existingContact.name === name && existingContact.number === number\n    );\n\n    if (contactExists) {\n      form.reset();\n      return alert(`${name} is already in contacts`);\n    }\n\n    dispatch(addContact(contact));\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <label className={css.contactFormLabel}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          className={css.inputEl}\n        />\n      </label>\n      <label className={css.contactFormLabel}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          className={css.inputEl}\n        />\n      </label>\n      <button type=\"submit\" className={css.button}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterLabel\":\"Filter_filterLabel__+pnW-\",\"inputEl\":\"Filter_inputEl__BAHP9\"};","import { useDispatch } from 'react-redux';\nimport { filterContact } from 'redux/contacts/filtersSlice';\nimport css from 'components/Filter/Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilter = e => {\n    const filterValue = e.target.value;\n    dispatch(filterContact(filterValue));\n  };\n\n  return (\n    <label className={css.filterLabel}>\n      Find your contacts by name\n      <input\n        type=\"text\"\n        placeholder=\"Search\"\n        onChange={handleFilter}\n        className={css.inputEl}\n      />\n    </label>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"listEl\":\"ContactList_listEl__bpoQ-\",\"delBtn\":\"ContactList_delBtn__SixzE\"};","import { useSelector, useDispatch } from 'react-redux';\nimport css from 'components/ContactList/ContactList.module.css';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectFilter } from 'redux/contacts/filtersSlice';\n\nexport const ContactList = () => {\n  const contacts = useSelector(state => state.contacts.contacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const filteredContacts = [...contacts]\n    .sort((firstContact, secondContact) =>\n      firstContact.name.localeCompare(secondContact.name)\n    )\n    .filter(contact =>\n      contact.name.toLowerCase().includes(filter && filter.toLowerCase())\n    );\n\n  return filteredContacts.length <= 0 ? (\n    <p>No contacts to display.</p>\n  ) : (\n    <ul>\n      {filteredContacts.map(contact => (\n        <li key={contact.id} className={css.listEl}>\n          {contact.name}: {contact.number}\n          <button\n            onClick={() => handleDelete(contact.id)}\n            className={css.delBtn}\n          >\n            X\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from './filtersSlice';\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectFilteredContacts = state => state.filters;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    if (filter === '') {\n      return contacts;\n    } else {\n      return contacts.filter(\n        contact => contact.name.toLowerCase().includes(filter.filter) ?? []\n      );\n    }\n  }\n);\n","import { React, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport css from './Phonebook.module.css';\n\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nconst Phonebook = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.wrapper}>\n      <HelmetProvider>\n        <Helmet>\n          <title>Phonebook</title>\n        </Helmet>\n      </HelmetProvider>\n      <ContactForm />\n      <h2 className={css.header}>Phonebook</h2>\n      <Filter />\n      {isLoading ? <p>Loading contacts...</p> : <ContactList />}\n    </div>\n  );\n};\n\nexport default Phonebook;\n"],"names":["ContactForm","dispatch","useDispatch","contacts","useSelector","state","onSubmit","e","preventDefault","form","target","name","elements","value","number","contact","some","existingContact","reset","alert","addContact","className","css","type","pattern","title","required","Filter","placeholder","onChange","filterValue","filterContact","ContactList","filter","selectFilter","filteredContacts","sort","firstContact","secondContact","localeCompare","toLowerCase","includes","length","map","onClick","id","deleteContact","selectIsLoading","isLoading","createSelector","useEffect","fetchContacts"],"sourceRoot":""}